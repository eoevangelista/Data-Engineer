{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-strider"
		},
		"AzureStride_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStride'"
		},
		"stride_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'stride'"
		},
		"trg_stride_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/c1c220f9-ee03-4e05-8c17-d6252e384214/resourceGroups/estudos/providers/Microsoft.Storage/storageAccounts/estudosa52e"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/csv_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "movies"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "duration_mins",
						"type": "String"
					},
					{
						"name": "original_language",
						"type": "String"
					},
					{
						"name": "size_mb",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStride')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureStride_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "duration_mins",
						"type": "int",
						"precision": 10
					},
					{
						"name": "original_language",
						"type": "varchar"
					},
					{
						"name": "size_mb",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_movies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csv_movies",
								"type": "DatasetReference"
							},
							"name": "csvmovie"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_movies",
								"type": "DatasetReference"
							},
							"name": "sinkmovies"
						}
					],
					"transformations": [
						{
							"name": "AlterRow"
						}
					],
					"scriptLines": [
						"source(output(",
						"          title as string,",
						"          duration_mins as string,",
						"          original_language as string,",
						"          size_mb as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: true) ~> csvmovie",
						"csvmovie alterRow(upsertIf(true()),",
						"     insertIf(true())) ~> AlterRow",
						"AlterRow sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          title as string,",
						"          duration_mins as integer,",
						"          original_language as string,",
						"          size_mb as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['title'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          title,",
						"          duration_mins,",
						"          original_language,",
						"          size_mb",
						"     )) ~> sinkmovies"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_movies')]",
				"[concat(variables('factoryId'), '/datasets/sql_movies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_streams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "streams"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie_title",
						"type": "String"
					},
					{
						"name": "user_email",
						"type": "String"
					},
					{
						"name": "size_mb",
						"type": "String"
					},
					{
						"name": "start_at",
						"type": "String"
					},
					{
						"name": "end_at",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_streams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "movie_title",
						"type": "varchar"
					},
					{
						"name": "user_email",
						"type": "varchar"
					},
					{
						"name": "size_mb",
						"type": "float",
						"precision": 15
					},
					{
						"name": "start_at",
						"type": "varchar"
					},
					{
						"name": "end_at",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Streams"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "users"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_books')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "pages",
						"type": "int",
						"precision": 10
					},
					{
						"name": "author",
						"type": "varchar"
					},
					{
						"name": "publisher",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Books"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsn_books')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stride",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "books"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"pages": {
							"type": "integer"
						},
						"author": {
							"type": "string"
						},
						"publisher": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stride')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_books')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "jsn_books",
								"type": "DatasetReference"
							},
							"name": "jsnbooks"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_books",
								"type": "DatasetReference"
							},
							"name": "sinkbooks"
						}
					],
					"transformations": [
						{
							"name": "AlterRow"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name as string,",
						"          pages as integer,",
						"          author as string,",
						"          publisher as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false,",
						"     documentForm: 'documentPerLine') ~> jsnbooks",
						"jsnbooks alterRow(upsertIf(true()),",
						"     insertIf(true())) ~> AlterRow",
						"AlterRow sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          name as string,",
						"          pages as integer,",
						"          author as string,",
						"          publisher as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['name'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          name,",
						"          pages,",
						"          author,",
						"          publisher",
						"     )) ~> sinkbooks"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/jsn_books')]",
				"[concat(variables('factoryId'), '/datasets/sql_books')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_user')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csv_users",
								"type": "DatasetReference"
							},
							"name": "csvuser"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_users",
								"type": "DatasetReference"
							},
							"name": "sinkuser"
						}
					],
					"transformations": [
						{
							"name": "AlterRow"
						}
					],
					"scriptLines": [
						"source(output(",
						"          first_name as string,",
						"          last_name as string,",
						"          email as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false) ~> csvuser",
						"csvuser alterRow(upsertIf(true()),",
						"     insertIf(true())) ~> AlterRow",
						"AlterRow sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          first_name as string,",
						"          last_name as string,",
						"          email as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['email'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          first_name,",
						"          last_name,",
						"          email",
						"     )) ~> sinkuser"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_users')]",
				"[concat(variables('factoryId'), '/datasets/sql_users')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_streams')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csv_streams",
								"type": "DatasetReference"
							},
							"name": "csvstreams"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_streams",
								"type": "DatasetReference"
							},
							"name": "sinkstreams"
						}
					],
					"transformations": [
						{
							"name": "AlterRow"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie_title as string,",
						"          user_email as string,",
						"          size_mb as double,",
						"          start_at as string,",
						"          end_at as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false) ~> csvstreams",
						"csvstreams alterRow(upsertIf(true()),",
						"     insertIf(true())) ~> AlterRow",
						"AlterRow sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          movie_title as string,",
						"          user_email as string,",
						"          size_mb as double,",
						"          start_at as string,",
						"          end_at as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['movie_title','user_email','start_at'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          movie_title,",
						"          user_email,",
						"          size_mb,",
						"          start_at,",
						"          end_at",
						"     )) ~> sinkstreams"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_streams')]",
				"[concat(variables('factoryId'), '/datasets/sql_streams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stride')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_books",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_streams",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_books",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"jsnbooks": {},
									"sinkbooks": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "8eda244a-ebbf-4edc-b05b-167573750440"
							}
						}
					},
					{
						"name": "df_movies",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_movies",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"csvmovie": {},
									"sinkmovies": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "3333dfc8-5937-4666-9b46-ace242d1600a"
							}
						}
					},
					{
						"name": "df_user",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_movies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_user",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"csvuser": {},
									"sinkuser": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "ebff4997-1c74-4d9a-9397-3e268dbc804e"
							}
						}
					},
					{
						"name": "df_streams",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_user",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_streams",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"csvstreams": {},
									"sinkstreams": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "c07b55d9-06ee-4504-8164-680fe4ff6cb0"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_books')]",
				"[concat(variables('factoryId'), '/dataflows/df_movies')]",
				"[concat(variables('factoryId'), '/dataflows/df_user')]",
				"[concat(variables('factoryId'), '/dataflows/df_streams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stride')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('stride_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trg_stride')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_stride",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/strider/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trg_stride_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_stride')]"
			]
		}
	]
}